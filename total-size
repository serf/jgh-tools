#!/usr/bin/perl -w
#
# John Harrison
#
use strict;
use Getopt::Std;

my %opts;
getopts('bkmgfnc:i:h', \%opts);

if ( $opts{h} ) {
    die <<EOT;
Usage: $0 -[b|k|m|g] -[f|n|c COL] -[i 512|kb] -[h]
Where:
  -b - Show total in bytes
  -k - Show total in kilobytes
  -m - Show total in megabytes
  -g - Show total in gigabytes

Default output is in the most appropriate units for the size.

  -f - Sum 7th column (find -ls format)
  -n - Sum 1st colum (list of numbers)
  -c - Sum column COL

Default column is 5, to sum the output of 'ls -l'

  -i - Input units [512 or kb]

  -h - Show this help

EOT
}

my $div = {
    b => 1,
    k => 1024,
    m => 1048576,    # 1024 ** 2
    g => 1073741824, # 1024 ** 3
    kb => 1024,
    mb => 1048576,
    gb => 1073741824,
};

my $total = 0;
my $col = 4;
my $car = '-';

# Find format
if ( $opts{f} ) {
   $col = 6;
   $car = '[0-9]';
} elsif ( $opts{c} ) {
   $col = $opts{c} -1;
   $car = '.';
} elsif ( $opts{n} ) {
   $col = 0;
   $car = '[0-9]';
}

my $ip = 1;
if ( $opts{i} ) {
    if ( $opts{i} =~ /^\d+$/ ) {
        $ip = $opts{i}; 
    } else {
        for my $m ( keys ( %{$div} ) ) {
            if ( $opts{i} eq $m ) {
                $ip = $div->{$m};
            }
        }
    }
}

while (<>) {

    next if $_ !~ /^$car/;
    my @line = split(/\s+/,$_);
    next if $line[$col] !~ /^\d+$/;
    $total += $line[$col] * $ip;

}

sub show($) {

    my $unit = shift;

    if ( $total % $div->{$unit} ) {
        printf "%.1f %s\n", $total / $div->{$unit}, uc($unit);
    }
    else {
        printf "%d %s\n", $total / $div->{$unit}, uc($unit);
    }
    exit 0;

}

for my $mult qw(g m k b) {

    if ( $opts{$mult} ) {
        show($mult);
    }

}

for my $mult qw(g m k) {

    if ( $total > $div->{$mult} ) {
        show($mult);
    }

}

