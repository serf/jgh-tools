#!/usr/bin/perl -s
#
#
#
use warnings;
use strict;

my $total;
our $s;

sub read_file ($) {

    my $file = shift;

    open (my $file_fh, "$file") || die "Can't read '$file': $!\n";
    while (defined (my $line = <$file_fh>)) {

        #
        $line =~ s/\xa3//g; # Pound symbol
        $line =~ s/[A-Za-z]/ /g; # How did I get another pound?
        $line =~ s/\$//g;
        $line =~ s/,//g;
        $line =~ s/\s+/ /g;
        $line =~ s/^\s//g;
        $line =~ s/\s$//g;
        if ( $s && $line =~ / / ) {
            $line = eval(join('+',split(/\s+/,$line)));
        }
        next if $line =~ /^$/;
        die "Bad data: '$line'\n" if $line !~ /^[\d\.]+$/;
        $total += $line;

    }
    close $file_fh;

}

if ( $#ARGV == -1 ) {

    read_file('-');

} elsif ( $ARGV[-1] eq '+' ) {

    pop @ARGV;
    $total = eval(join('+',@ARGV));

} elsif ( $ARGV[0] eq '+' ) {

    shift;
    $total = eval(join('+',@ARGV));

} elsif ( -r $ARGV[0 ] ) {

    read_file(shift);

}

print $total, $/;

