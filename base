#!/usr/bin/perl
#
# From http://www.nntp.perl.org/group/perl.beginners/2003/01/msg40076.html
#

my ($conv,$in) = (shift,shift);

if ( $conv eq 'asc2dec' ) {

   $out = join(" ", map ord, split(//, $in));

} elsif ( $conv eq 'asc2hex' ) {

   $out = unpack "H*", $in;

} elsif ( $conv eq 'asc2hexs' ) {

   my $hex = unpack "H*", $in;
   $out = join " ", ( $hex =~ m/../g );

} elsif ( $conv eq 'bin2dec' ) {
  
   $out = unpack("N", pack("B32", substr("0" x 32 . $in, -32))); 
  
} elsif ( $conv eq 'bin2hex' ) {
  
   $out = unpack("H8", pack("B32", substr("0" x 32 . $in, -32))); 
  
} elsif ( $conv eq 'bin2oct' ) {
  
   $out = sprintf "%o", unpack("N", pack("B32", substr("0" x 32 . $in, -32))); 
  
} elsif ( $conv eq 'dec2asc' ) {
  
   $out = join("", map chr, split(/\s+/, $in));
  
} elsif ( $conv eq 'dec2bin' ) {
  
   $out = unpack("B*", pack("N", $in));
  
} elsif ( $conv eq 'dec2hex' ) {
  
   $out = unpack("H8", pack("N", $in));
  
} elsif ( $conv eq 'dec2oct' ) {
  
   $out = sprintf "%o", $in;
  
} elsif ( $conv eq 'hex2asc' ) {

   my @hex;

   if ( $in =~ / / ) {
       @hex = split(/\s+/, $in);
   } else {
       @hex = ( $in =~ m/../g );
   }
   $out = join("", map chr hex, @hex);

} elsif ( $conv eq 'hex2bin' ) {
  
   $out = unpack("B32", pack("N", hex $in));
  
} elsif ( $conv eq 'hex2dec' ) {
  
   $out = hex $in;
  
} elsif ( $conv eq 'hex2oct' ) {
  
   $out = sprintf "%o", hex $in;
  
} elsif ( $conv eq 'oct2bin' ) {
  
   $out = unpack("B32", pack("N", oct $in));
  
} elsif ( $conv eq 'oct2dec' ) {
  
   $out = oct $in;
  
} elsif ( $conv eq 'oct2hex' ) {
  
   $out = unpack("H8", pack("N", oct $in));

} elsif ( $conv eq 'listall' ) {
  
   $out = "asc2dec bin2dec bin2hex bin2oct dec2asc dec2bin dec2hex dec2oct" .
       " hex2bin hex2dec hex2oct oct2bin oct2dec oct2hex listall";

} else {

   die <<EOT;
Usage: $0 [bin2dec|bin2hex|bin2oct|dec2asc|dec2bin|dec2hex|dec2oct] NUM
 ...or $0 [hex2asc|hex2bin|hex2dec|hex2oct|oct2bin|oct2dec|oct2hex] NUM
 ...or $0 [asc2dec|asc2hex|asc2hexs] CHARACTERS
 ...or $0 dec2asc "67 72 65 82 65 67 84 69 82 83"
 ...or $0 listall
 
EOT

}

print "$out\n";

