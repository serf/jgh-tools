#!/usr/bin/perl
#
#
#
use warnings;
use strict;
use Getopt::Long;

our %opts;
GetOptions(
    'verbose'  => \$opts{verbose},
    'total'    => \$opts{total},
    'time'     => \$opts{time},
    't'        => \$opts{time},
    'help'     => \$opts{help},
    'procs'    => \$opts{procs},
    'summary'  => \$opts{summary},
    'usage'    => \$opts{help},
    );

if ( $opts{help} ) {

die <<EOT;
Usage: $0 [options]
  -total    - Show the total number of threads
  -time     - Show the time with the total threads
  -summary  - Show PIDs with total per PID
  -procs    - Show ps output
  -verbose  - EVERYTHING!
  -help     - Show this help
EOT

}

my $cmd = '/bin/ps -eLf';

sub VERBOSE { $opts{verbose} }

my $procs;
my $total = 0;
open (my $cmd_fh, "$cmd|") || die "Can't run '$cmd': $!\n";
while (defined (my $line = <$cmd_fh>)) {

    #
    my @line = split(/\s+/, $line);
    if ( $opts{procs} ) {
        if ( $#line > 10 ) {
            for my $i ( 0 .. 9 ) {
                print "$line[$i] ";
            }
            print $/;
            for my $i ( 10 .. $#line ) {
                print "\t$line[$i]\n";
            }
        } else {
            print $line;
        }
    }
    $procs->{$line[1]}++;
    $total++;

}
close $cmd_fh;

sub PRINT { $opts{summary} };

my @keys = sort { $procs->{$b} <=> $procs->{$a} } keys(%$procs);
my @vals = @{$procs}{@keys};

for my $key ( @keys ) {
    next if $procs->{$key} < 2;
    printf "%5d %s\n", $procs->{$key}, $key if $opts{summary};
}

if ( $opts{time} ) {

    my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst)
        = localtime(time);

    printf "%02d:%02d:%02d %d threads\n", $hour, $min, $sec, $total;

}

print "Total: $total\n" if $opts{total};

